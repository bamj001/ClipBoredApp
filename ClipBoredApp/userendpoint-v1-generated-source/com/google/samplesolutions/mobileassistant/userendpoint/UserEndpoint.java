/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-11-22 19:59:01 UTC)
 * on 2013-12-03 at 22:14:57 UTC 
 * Modify at your own risk.
 */

package com.google.samplesolutions.mobileassistant.userendpoint;

/**
 * Service definition for UserEndpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UserEndpointRequestInitializer} to initialize global
 * parameters via its {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class UserEndpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

	// Note: Leave this static initializer at the top of the file.
	static {
		com.google.api.client.util.Preconditions.checkState(
				com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1
						&& com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
				"You are currently running with version %s of google-api-client. "
						+ "You need at least version 1.15 of google-api-client to run version "
						+ "1.15.0-rc of the userendpoint library.",
				com.google.api.client.googleapis.GoogleUtils.VERSION);
	}

	/**
	 * The default encoded root URL of the service. This is determined when the
	 * library is generated and normally should not be changed.
	 *
	 * @since 1.7
	 */
	public static final String DEFAULT_ROOT_URL = "REDACTED";

	/**
	 * The default encoded service path of the service. This is determined when
	 * the library is generated and normally should not be changed.
	 *
	 * @since 1.7
	 */
	public static final String DEFAULT_SERVICE_PATH = "userendpoint/v1/";

	/**
	 * The default encoded base URL of the service. This is determined when the
	 * library is generated and normally should not be changed.
	 */
	public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

	/**
	 * Constructor.
	 *
	 * <p>
	 * Use {@link Builder} if you need to specify any of the optional
	 * parameters.
	 * </p>
	 *
	 * @param transport
	 *            HTTP transport, which should normally be:
	 *            <ul>
	 *            <li>Google App Engine:
	 *            {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
	 *            <li>Android: {@code newCompatibleTransport} from
	 *            {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
	 *            <li>Java:
	 *            {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
	 *            </li>
	 *            </ul>
	 * @param jsonFactory
	 *            JSON factory, which may be:
	 *            <ul>
	 *            <li>Jackson:
	 *            {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
	 *            <li>Google GSON:
	 *            {@code com.google.api.client.json.gson.GsonFactory}</li>
	 *            <li>Android Honeycomb or higher:
	 *            {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
	 *            </ul>
	 * @param httpRequestInitializer
	 *            HTTP request initializer or {@code null} for none
	 * @since 1.7
	 */
	public UserEndpoint(com.google.api.client.http.HttpTransport transport,
			com.google.api.client.json.JsonFactory jsonFactory,
			com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
		this(new Builder(transport, jsonFactory, httpRequestInitializer));
	}

	/**
	 * @param builder
	 *            builder
	 */
	UserEndpoint(Builder builder) {
		super(builder);
	}

	@Override
	protected void initialize(
			com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest)
			throws java.io.IOException {
		super.initialize(httpClientRequest);
	}

	/**
	 * Create a request for the method "getUser".
	 *
	 * This request holds the parameters needed by the the userendpoint server.
	 * After setting any optional parameters, call the {@link GetUser#execute()}
	 * method to invoke the remote operation.
	 *
	 * @param name
	 * @param pass
	 * @return the request
	 */
	public GetUser getUser(java.lang.String name, java.lang.String pass) throws java.io.IOException {
		GetUser result = new GetUser(name, pass);
		initialize(result);
		return result;
	}

	public class GetUser
			extends UserEndpointRequest<com.google.samplesolutions.mobileassistant.userendpoint.model.User> {

		private static final String REST_PATH = "user/{name}/{pass}";

		/**
		 * Create a request for the method "getUser".
		 *
		 * This request holds the parameters needed by the the userendpoint
		 * server. After setting any optional parameters, call the
		 * {@link GetUser#execute()} method to invoke the remote operation.
		 * <p>
		 * {@link GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
		 * must be called to initialize this instance immediately after invoking
		 * the constructor.
		 * </p>
		 *
		 * @param name
		 * @param pass
		 * @since 1.13
		 */
		protected GetUser(java.lang.String name, java.lang.String pass) {
			super(UserEndpoint.this, "GET", REST_PATH, null,
					com.google.samplesolutions.mobileassistant.userendpoint.model.User.class);
			this.name = com.google.api.client.util.Preconditions.checkNotNull(name,
					"Required parameter name must be specified.");
			this.pass = com.google.api.client.util.Preconditions.checkNotNull(pass,
					"Required parameter pass must be specified.");
		}

		@Override
		public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
			return super.executeUsingHead();
		}

		@Override
		public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
			return super.buildHttpRequestUsingHead();
		}

		@Override
		public GetUser setAlt(java.lang.String alt) {
			return (GetUser) super.setAlt(alt);
		}

		@Override
		public GetUser setFields(java.lang.String fields) {
			return (GetUser) super.setFields(fields);
		}

		@Override
		public GetUser setKey(java.lang.String key) {
			return (GetUser) super.setKey(key);
		}

		@Override
		public GetUser setOauthToken(java.lang.String oauthToken) {
			return (GetUser) super.setOauthToken(oauthToken);
		}

		@Override
		public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
			return (GetUser) super.setPrettyPrint(prettyPrint);
		}

		@Override
		public GetUser setQuotaUser(java.lang.String quotaUser) {
			return (GetUser) super.setQuotaUser(quotaUser);
		}

		@Override
		public GetUser setUserIp(java.lang.String userIp) {
			return (GetUser) super.setUserIp(userIp);
		}

		@com.google.api.client.util.Key
		private java.lang.String name;

		/**
		
		 */
		public java.lang.String getName() {
			return name;
		}

		public GetUser setName(java.lang.String name) {
			this.name = name;
			return this;
		}

		@com.google.api.client.util.Key
		private java.lang.String pass;

		/**
		
		 */
		public java.lang.String getPass() {
			return pass;
		}

		public GetUser setPass(java.lang.String pass) {
			this.pass = pass;
			return this;
		}

		@Override
		public GetUser set(String parameterName, Object value) {
			return (GetUser) super.set(parameterName, value);
		}
	}

	/**
	 * Create a request for the method "insertUser".
	 *
	 * This request holds the parameters needed by the the userendpoint server.
	 * After setting any optional parameters, call the
	 * {@link InsertUser#execute()} method to invoke the remote operation.
	 *
	 * @param content
	 *            the
	 *            {@link com.google.samplesolutions.mobileassistant.userendpoint.model.User}
	 * @return the request
	 */
	public InsertUser insertUser(com.google.samplesolutions.mobileassistant.userendpoint.model.User content)
			throws java.io.IOException {
		InsertUser result = new InsertUser(content);
		initialize(result);
		return result;
	}

	public class InsertUser
			extends UserEndpointRequest<com.google.samplesolutions.mobileassistant.userendpoint.model.User> {

		private static final String REST_PATH = "user";

		/**
		 * Create a request for the method "insertUser".
		 *
		 * This request holds the parameters needed by the the userendpoint
		 * server. After setting any optional parameters, call the
		 * {@link InsertUser#execute()} method to invoke the remote operation.
		 * <p>
		 * {@link InsertUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
		 * must be called to initialize this instance immediately after invoking
		 * the constructor.
		 * </p>
		 *
		 * @param content
		 *            the
		 *            {@link com.google.samplesolutions.mobileassistant.userendpoint.model.User}
		 * @since 1.13
		 */
		protected InsertUser(com.google.samplesolutions.mobileassistant.userendpoint.model.User content) {
			super(UserEndpoint.this, "POST", REST_PATH, content,
					com.google.samplesolutions.mobileassistant.userendpoint.model.User.class);
		}

		@Override
		public InsertUser setAlt(java.lang.String alt) {
			return (InsertUser) super.setAlt(alt);
		}

		@Override
		public InsertUser setFields(java.lang.String fields) {
			return (InsertUser) super.setFields(fields);
		}

		@Override
		public InsertUser setKey(java.lang.String key) {
			return (InsertUser) super.setKey(key);
		}

		@Override
		public InsertUser setOauthToken(java.lang.String oauthToken) {
			return (InsertUser) super.setOauthToken(oauthToken);
		}

		@Override
		public InsertUser setPrettyPrint(java.lang.Boolean prettyPrint) {
			return (InsertUser) super.setPrettyPrint(prettyPrint);
		}

		@Override
		public InsertUser setQuotaUser(java.lang.String quotaUser) {
			return (InsertUser) super.setQuotaUser(quotaUser);
		}

		@Override
		public InsertUser setUserIp(java.lang.String userIp) {
			return (InsertUser) super.setUserIp(userIp);
		}

		@Override
		public InsertUser set(String parameterName, Object value) {
			return (InsertUser) super.set(parameterName, value);
		}
	}

	/**
	 * Create a request for the method "removeUser".
	 *
	 * This request holds the parameters needed by the the userendpoint server.
	 * After setting any optional parameters, call the
	 * {@link RemoveUser#execute()} method to invoke the remote operation.
	 *
	 * @param usernameRem
	 * @param passwordRem
	 * @return the request
	 */
	public RemoveUser removeUser(java.lang.String usernameRem, java.lang.String passwordRem)
			throws java.io.IOException {
		RemoveUser result = new RemoveUser(usernameRem, passwordRem);
		initialize(result);
		return result;
	}

	public class RemoveUser extends UserEndpointRequest<Void> {

		private static final String REST_PATH = "user/{username_rem}/{password_rem}";

		/**
		 * Create a request for the method "removeUser".
		 *
		 * This request holds the parameters needed by the the userendpoint
		 * server. After setting any optional parameters, call the
		 * {@link RemoveUser#execute()} method to invoke the remote operation.
		 * <p>
		 * {@link RemoveUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
		 * must be called to initialize this instance immediately after invoking
		 * the constructor.
		 * </p>
		 *
		 * @param usernameRem
		 * @param passwordRem
		 * @since 1.13
		 */
		protected RemoveUser(java.lang.String usernameRem, java.lang.String passwordRem) {
			super(UserEndpoint.this, "DELETE", REST_PATH, null, Void.class);
			this.usernameRem = com.google.api.client.util.Preconditions.checkNotNull(usernameRem,
					"Required parameter usernameRem must be specified.");
			this.passwordRem = com.google.api.client.util.Preconditions.checkNotNull(passwordRem,
					"Required parameter passwordRem must be specified.");
		}

		@Override
		public RemoveUser setAlt(java.lang.String alt) {
			return (RemoveUser) super.setAlt(alt);
		}

		@Override
		public RemoveUser setFields(java.lang.String fields) {
			return (RemoveUser) super.setFields(fields);
		}

		@Override
		public RemoveUser setKey(java.lang.String key) {
			return (RemoveUser) super.setKey(key);
		}

		@Override
		public RemoveUser setOauthToken(java.lang.String oauthToken) {
			return (RemoveUser) super.setOauthToken(oauthToken);
		}

		@Override
		public RemoveUser setPrettyPrint(java.lang.Boolean prettyPrint) {
			return (RemoveUser) super.setPrettyPrint(prettyPrint);
		}

		@Override
		public RemoveUser setQuotaUser(java.lang.String quotaUser) {
			return (RemoveUser) super.setQuotaUser(quotaUser);
		}

		@Override
		public RemoveUser setUserIp(java.lang.String userIp) {
			return (RemoveUser) super.setUserIp(userIp);
		}

		@com.google.api.client.util.Key("username_rem")
		private java.lang.String usernameRem;

		/**
		
		 */
		public java.lang.String getUsernameRem() {
			return usernameRem;
		}

		public RemoveUser setUsernameRem(java.lang.String usernameRem) {
			this.usernameRem = usernameRem;
			return this;
		}

		@com.google.api.client.util.Key("password_rem")
		private java.lang.String passwordRem;

		/**
		
		 */
		public java.lang.String getPasswordRem() {
			return passwordRem;
		}

		public RemoveUser setPasswordRem(java.lang.String passwordRem) {
			this.passwordRem = passwordRem;
			return this;
		}

		@Override
		public RemoveUser set(String parameterName, Object value) {
			return (RemoveUser) super.set(parameterName, value);
		}
	}

	/**
	 * Create a request for the method "updateUser".
	 *
	 * This request holds the parameters needed by the the userendpoint server.
	 * After setting any optional parameters, call the
	 * {@link UpdateUser#execute()} method to invoke the remote operation.
	 *
	 * @param content
	 *            the
	 *            {@link com.google.samplesolutions.mobileassistant.userendpoint.model.User}
	 * @return the request
	 */
	public UpdateUser updateUser(com.google.samplesolutions.mobileassistant.userendpoint.model.User content)
			throws java.io.IOException {
		UpdateUser result = new UpdateUser(content);
		initialize(result);
		return result;
	}

	public class UpdateUser
			extends UserEndpointRequest<com.google.samplesolutions.mobileassistant.userendpoint.model.User> {

		private static final String REST_PATH = "user";

		/**
		 * Create a request for the method "updateUser".
		 *
		 * This request holds the parameters needed by the the userendpoint
		 * server. After setting any optional parameters, call the
		 * {@link UpdateUser#execute()} method to invoke the remote operation.
		 * <p>
		 * {@link UpdateUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
		 * must be called to initialize this instance immediately after invoking
		 * the constructor.
		 * </p>
		 *
		 * @param content
		 *            the
		 *            {@link com.google.samplesolutions.mobileassistant.userendpoint.model.User}
		 * @since 1.13
		 */
		protected UpdateUser(com.google.samplesolutions.mobileassistant.userendpoint.model.User content) {
			super(UserEndpoint.this, "PUT", REST_PATH, content,
					com.google.samplesolutions.mobileassistant.userendpoint.model.User.class);
		}

		@Override
		public UpdateUser setAlt(java.lang.String alt) {
			return (UpdateUser) super.setAlt(alt);
		}

		@Override
		public UpdateUser setFields(java.lang.String fields) {
			return (UpdateUser) super.setFields(fields);
		}

		@Override
		public UpdateUser setKey(java.lang.String key) {
			return (UpdateUser) super.setKey(key);
		}

		@Override
		public UpdateUser setOauthToken(java.lang.String oauthToken) {
			return (UpdateUser) super.setOauthToken(oauthToken);
		}

		@Override
		public UpdateUser setPrettyPrint(java.lang.Boolean prettyPrint) {
			return (UpdateUser) super.setPrettyPrint(prettyPrint);
		}

		@Override
		public UpdateUser setQuotaUser(java.lang.String quotaUser) {
			return (UpdateUser) super.setQuotaUser(quotaUser);
		}

		@Override
		public UpdateUser setUserIp(java.lang.String userIp) {
			return (UpdateUser) super.setUserIp(userIp);
		}

		@Override
		public UpdateUser set(String parameterName, Object value) {
			return (UpdateUser) super.set(parameterName, value);
		}
	}

	/**
	 * Builder for {@link UserEndpoint}.
	 *
	 * <p>
	 * Implementation is not thread-safe.
	 * </p>
	 *
	 * @since 1.3.0
	 */
	public static final class Builder
			extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

		/**
		 * Returns an instance of a new builder.
		 *
		 * @param transport
		 *            HTTP transport, which should normally be:
		 *            <ul>
		 *            <li>Google App Engine:
		 *            {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
		 *            <li>Android: {@code newCompatibleTransport} from
		 *            {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
		 *            <li>Java:
		 *            {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
		 *            </li>
		 *            </ul>
		 * @param jsonFactory
		 *            JSON factory, which may be:
		 *            <ul>
		 *            <li>Jackson:
		 *            {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
		 *            <li>Google GSON:
		 *            {@code com.google.api.client.json.gson.GsonFactory}</li>
		 *            <li>Android Honeycomb or higher:
		 *            {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
		 *            </ul>
		 * @param httpRequestInitializer
		 *            HTTP request initializer or {@code null} for none
		 * @since 1.7
		 */
		public Builder(com.google.api.client.http.HttpTransport transport,
				com.google.api.client.json.JsonFactory jsonFactory,
				com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
			super(transport, jsonFactory, DEFAULT_ROOT_URL, DEFAULT_SERVICE_PATH, httpRequestInitializer, false);
		}

		/** Builds a new instance of {@link UserEndpoint}. */
		@Override
		public UserEndpoint build() {
			return new UserEndpoint(this);
		}

		@Override
		public Builder setRootUrl(String rootUrl) {
			return (Builder) super.setRootUrl(rootUrl);
		}

		@Override
		public Builder setServicePath(String servicePath) {
			return (Builder) super.setServicePath(servicePath);
		}

		@Override
		public Builder setHttpRequestInitializer(
				com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
			return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
		}

		@Override
		public Builder setApplicationName(String applicationName) {
			return (Builder) super.setApplicationName(applicationName);
		}

		@Override
		public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
			return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
		}

		@Override
		public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
			return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
		}

		@Override
		public Builder setSuppressAllChecks(boolean suppressAllChecks) {
			return (Builder) super.setSuppressAllChecks(suppressAllChecks);
		}

		/**
		 * Set the {@link UserEndpointRequestInitializer}.
		 *
		 * @since 1.12
		 */
		public Builder setUserEndpointRequestInitializer(
				UserEndpointRequestInitializer UserEndpointRequestInitializer) {
			return (Builder) super.setGoogleClientRequestInitializer(UserEndpointRequestInitializer);
		}

		@Override
		public Builder setGoogleClientRequestInitializer(
				com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
			return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
		}
	}
}
